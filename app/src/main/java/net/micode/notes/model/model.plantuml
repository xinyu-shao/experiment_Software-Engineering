@startuml

title __MODEL's Class Diagram__\n

  namespace net.micode.notes {
    namespace model {
      class net.micode.notes.model.Note {
          {static} - TAG : String
          - mNoteDiffValues : ContentValues
          + Note()
          {static} + getNewNoteId()
          + getTextDataId()
          + isLocalModified()
          + setCallData()
          + setCallDataId()
          + setNoteValue()
          + setTextData()
          + setTextDataId()
          + syncNote()
      }
    }
  }
  

  namespace net.micode.notes {
    namespace model {
      class net.micode.notes.model.Note.NoteData {
          {static} - TAG : String
          - mCallDataId : long
          - mCallDataValues : ContentValues
          - mTextDataId : long
          - mTextDataValues : ContentValues
          + NoteData()
          ~ isLocalModified()
          ~ pushIntoContentResolver()
          ~ setCallData()
          ~ setCallDataId()
          ~ setTextData()
          ~ setTextDataId()
      }
    }
  }
  

  namespace net.micode.notes {
    namespace model {
      class net.micode.notes.model.WorkingNote {
          {static} + DATA_PROJECTION : String[]
          {static} + NOTE_PROJECTION : String[]
          {static} - DATA_CONTENT_COLUMN : int
          {static} - DATA_ID_COLUMN : int
          {static} - DATA_MIME_TYPE_COLUMN : int
          {static} - DATA_MODE_COLUMN : int
          {static} - NOTE_ALERTED_DATE_COLUMN : int
          {static} - NOTE_BG_COLOR_ID_COLUMN : int
          {static} - NOTE_MODIFIED_DATE_COLUMN : int
          {static} - NOTE_PARENT_ID_COLUMN : int
          {static} - NOTE_WIDGET_ID_COLUMN : int
          {static} - NOTE_WIDGET_TYPE_COLUMN : int
          {static} - TAG : String
          - mAlertDate : long
          - mBgColorId : int
          - mContent : String
          - mContext : Context
          - mFolderId : long
          - mIsDeleted : boolean
          - mMode : int
          - mModifiedDate : long
          - mNoteId : long
          - mWidgetId : int
          - mWidgetType : int
          + convertToCallNote()
          {static} + createEmptyNote()
          + existInDatabase()
          + getAlertDate()
          + getBgColorId()
          + getBgColorResId()
          + getCheckListMode()
          + getContent()
          + getFolderId()
          + getModifiedDate()
          + getNoteId()
          + getTitleBgResId()
          + getWidgetId()
          + getWidgetType()
          + hasClockAlert()
          {static} + load()
          + markDeleted()
          + saveNote()
          + setAlertDate()
          + setBgColorId()
          + setCheckListMode()
          + setOnSettingStatusChangedListener()
          + setWidgetId()
          + setWidgetType()
          + setWorkingText()
          - WorkingNote()
          - WorkingNote()
          - isWorthSaving()
          - loadNote()
          - loadNoteData()
      }
    }
  }
  

  namespace net.micode.notes {
    namespace model {
      interface net.micode.notes.model.WorkingNote.NoteSettingChangedListener {
          {abstract} + onBackgroundColorChanged()
          {abstract} + onCheckListModeChanged()
          {abstract} + onClockAlertChanged()
          {abstract} + onWidgetChanged()
      }
    }
  }
  

  net.micode.notes.model.Note o-- net.micode.notes.model.Note.NoteData : mNoteData
  net.micode.notes.model.Note +-down- net.micode.notes.model.Note.NoteData
  net.micode.notes.model.WorkingNote o-- net.micode.notes.model.Note : mNote
  net.micode.notes.model.WorkingNote o-- net.micode.notes.model.WorkingNote.NoteSettingChangedListener : mNoteSettingStatusListener
  net.micode.notes.model.WorkingNote +-down- net.micode.notes.model.WorkingNote.NoteSettingChangedListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
